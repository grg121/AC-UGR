.file	"daxpy.c"
	.text
	.globl	suma_prod
	.type	suma_prod, @function
suma_prod:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movl	%edi, -4(%rbp)
	movl	%esi, -8(%rbp)
	movl	%edx, -12(%rbp)
	movl	-4(%rbp), %eax
	imull	-8(%rbp), %eax
	movl	%eax, %edx
	movl	-12(%rbp), %eax
	addl	%edx, %eax
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	suma_prod, .-suma_prod
	.section	.rodata
.LC0:
	.string	"a=%d b=%d n=%d\n"
.LC1:
	.string	"resultado= %d\n"
.LC3:
	.string	"Tiempo= %f ms\n"
.LC4:
	.string	"a"
.LC5:
	.string	"dalsi_salida"
.LC6:
	.string	"Error opening file."
.LC7:
	.string	"\nO3\t%f"
	.text
	.globl	main
	.type	main, @function
main:
.LFB1:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$80, %rsp
	call	clock
	movq	%rax, -16(%rbp)
	movl	$6000, -20(%rbp)
	movl	$1, -24(%rbp)
	movl	$2, -28(%rbp)
	movl	$1, -4(%rbp)
	jmp	.L4
.L5:
	movl	-20(%rbp), %ecx
	movl	-28(%rbp), %edx
	movl	-24(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC0, %edi
	movl	$0, %eax
	call	printf
	movl	-20(%rbp), %edx
	movl	-28(%rbp), %ecx
	movl	-24(%rbp), %eax
	movl	%ecx, %esi
	movl	%eax, %edi
	call	suma_prod
	movl	%eax, -32(%rbp)
	movl	-32(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC1, %edi
	movl	$0, %eax
	call	printf
	addl	$1, -4(%rbp)
.L4:
	cmpl	$10000, -4(%rbp)
	jle	.L5
	call	clock
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	difftime
	movapd	%xmm0, %xmm1
	movsd	.LC2(%rip), %xmm0
	divsd	%xmm0, %xmm1
	movapd	%xmm1, %xmm0
	movsd	%xmm0, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -72(%rbp)
	movsd	-72(%rbp), %xmm0
	movl	$.LC3, %edi
	movl	$1, %eax
	call	printf
	movl	$.LC4, %esi
	movl	$.LC5, %edi
	call	fopen
	movq	%rax, -56(%rbp)
	cmpq	$0, -56(%rbp)
	jne	.L6
	movl	$.LC6, %edi
	call	perror
.L6:
	movq	-48(%rbp), %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, -72(%rbp)
	movsd	-72(%rbp), %xmm0
	movl	$.LC7, %esi
	movq	%rax, %rdi
	movl	$1, %eax
	call	fprintf
	movq	-56(%rbp), %rax
	movq	%rax, %rdi
	call	fclose
	movl	$0, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	main, .-main
	.section	.rodata
	.align 8
.LC2:
	.long	0
	.long	1083129856
	.ident	"GCC: (GNU) 6.3.1 20170109"
	.section	.note.GNU-stack,"",@progbits
